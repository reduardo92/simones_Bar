{"version":3,"file":"static/webpack/static\\development\\pages\\menu.js.7cc1b74c4ebc745b5162.hot-update.js","sources":["webpack:///./components/layout.js","webpack:///./components/menu/menuContent.jsx"],"sourcesContent":["import Head from 'next/head';\r\nimport Navbar from './navbar';\r\nimport Footer from './footer';\r\nimport Hero from '../components/ui/hero';\r\nimport Banner from './ui/banner';\r\nimport '../global.css';\r\n\r\nconst Layout = ({\r\n  children,\r\n  heroSize,\r\n  heroImg,\r\n  titleImg,\r\n  banner,\r\n  heroOpacity\r\n}) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Simone's Bar</title>\r\n        <link href='../public/global.css' rel='stylesheet' />\r\n        <link\r\n          href='https://fonts.googleapis.com/css?family=Montserrat:400,500,700|Reenie+Beanie&display=swap'\r\n          rel='stylesheet'\r\n        />\r\n      </Head>\r\n      <header>\r\n        <Hero heroSize={heroSize} img={heroImg} heroOpacity={heroOpacity}>\r\n          <Navbar />\r\n          <Banner titleImg={titleImg} banner={banner} />\r\n        </Hero>\r\n      </header>\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useState } from 'react';\r\nimport menu from './menu';\r\nimport TabStyled from '../ui/tabs';\r\nimport TitleBanner from '../ui/titleBanner';\r\nimport styled from 'styled-components';\r\n\r\nconst Styled = styled.section`\r\n  margin: 3em 1em 5em;\r\n  .container {\r\n    display: grid;\r\n    justify-items: center;\r\n    gap: 3em;\r\n  }\r\n\r\n  /* TAbs */\r\n  .taps--container {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 1em;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    align-items: center;\r\n  }\r\n\r\n  .tab {\r\n    color: var(--white-clr);\r\n    background-color: var(--second-clr);\r\n    padding: 0.8em 1.3em;\r\n    border-radius: 5px;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    font-weight: var(--fw-bold);\r\n  }\r\n\r\n  .menu {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(45%, 1fr));\r\n    gap: 3em;\r\n    width: 100%;\r\n  }\r\n\r\n  .menu--img {\r\n    max-width: 340px;\r\n  }\r\n\r\n  .title {\r\n    color: var(--primary-clr);\r\n  }\r\n\r\n  .menu--item {\r\n    border-bottom: 2px dotted var(--second-clr);\r\n    padding-bottom: 1em;\r\n    display: flex;\r\n    align-items: flex-start;\r\n\r\n    &:last-child {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  .menu--item--last {\r\n    border: none;\r\n  }\r\n\r\n  .menu--item--text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n\r\n  .price {\r\n    color: var(--primary-clr);\r\n    font-weight: var(--fw-bold);\r\n    margin-left: auto;\r\n  }\r\n\r\n  /* Button */\r\n  .button {\r\n    &:hover,\r\n    &focus {\r\n      border-color: var(--second-clr);\r\n    }\r\n  }\r\n\r\n  /* Sandwiches subtile */\r\n\r\n  .sandwiche--subtitle {\r\n    margin-top: auto;\r\n  }\r\n\r\n  @media screen and (min-width: 760px) {\r\n    .container {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      max-width: 1300px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .taps--container {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    .title--banner,\r\n    .taps--container,\r\n    .menu {\r\n      grid-column: 1/3;\r\n    }\r\n\r\n    .menu--item:nth-last-child(2) {\r\n      border: none;\r\n    }\r\n\r\n    .menu--img {\r\n      margin-top: -5em;\r\n      justify-self: flex-end;\r\n      grid-column: 1/3;\r\n    }\r\n\r\n    .menu--title {\r\n      grid-column: 1 / 3;\r\n      color: var(--accent-clr);\r\n    }\r\n  }\r\n  @media screen and (min-width: 1300px) {\r\n    .taps--container {\r\n      grid-template-columns: repeat(8, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MenuContent = () => {\r\n  const { tab, setTab } = useState('drinks');\r\n\r\n  return (\r\n    <Styled>\r\n      <div className='container'>\r\n        <TitleBanner\r\n          topTitle='CHECK IT OUT'\r\n          title='menu'\r\n          botTitle='come eat some good food'\r\n        />\r\n        <div className='taps--container'>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('drinks')}\r\n            active={tab === 'drinks'}\r\n          >\r\n            drinks\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('beer')}\r\n            active={tab === 'beer'}\r\n          >\r\n            beer\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('appetizers')}\r\n            active={tab === 'appetizers'}\r\n          >\r\n            Appetizers\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('soupSalad')}\r\n            active={tab === 'soupSalad'}\r\n          >\r\n            Soups&Salads\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('pizzas')}\r\n            active={tab === 'pizzas'}\r\n          >\r\n            pizzas\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('sandwiches')}\r\n            active={tab === 'sandwiches'}\r\n          >\r\n            sandwiches\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('desserts')}\r\n            active={tab === 'desserts'}\r\n          >\r\n            desserts\r\n          </TabStyled>\r\n          <TabStyled\r\n            color\r\n            onClick={() => setTab('brunch')}\r\n            active={tab === 'brunch'}\r\n          >\r\n            brunch\r\n          </TabStyled>\r\n        </div>\r\n        <div className='menu'>\r\n          {tab === 'drinks' && (\r\n            <>\r\n              <h2 className='title menu--title'>Cocktails</h2>\r\n              {menu.drinks.cocktails.map(({ title, text, price }, i) => (\r\n                <div key={title + i} className='menu--item'>\r\n                  <div className='menu--item--text'>\r\n                    <h3 className='title'>{title}</h3>\r\n                    <p className='para'>{text}</p>\r\n                  </div>\r\n                  <p className='price'>${price}</p>\r\n                </div>\r\n              ))}\r\n              <h2 className='title menu--title'>Wines</h2>\r\n              {menu.drinks.wines.map(({ title, text, price }, i) => (\r\n                <div key={title + i} className='menu--item'>\r\n                  <div className='menu--item--text'>\r\n                    <h3 className='title'>{title}</h3>\r\n                    <p className='para'>{text}</p>\r\n                  </div>\r\n                  <p className='price'>${price}</p>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n          {tab === 'beer' && (\r\n            <>\r\n              <h2 className='title menu--title'>Drafts</h2>\r\n              {menu.beer.drafts.map(({ title, text, price }, i) => (\r\n                <div key={title + i} className='menu--item'>\r\n                  <div className='menu--item--text'>\r\n                    <h3 className='title'>{title}</h3>\r\n                    <p className='para'>{text}</p>\r\n                  </div>\r\n                  <p className='price'>${price}</p>\r\n                </div>\r\n              ))}\r\n              <h2 className='title menu--title'>Packaged</h2>\r\n              {menu.beer.packaged.map(({ title, text, price }, i) => (\r\n                <div key={title + i} className='menu--item'>\r\n                  <div className='menu--item--text'>\r\n                    <h3 className='title'>{title}</h3>\r\n                    <p className='para'>{text}</p>\r\n                  </div>\r\n                  <p className='price'>${price}</p>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n          {tab !== 'drinks' &&\r\n            tab !== 'beer' &&\r\n            menu[tab].map(({ title, text, subtitle, price }, i) => (\r\n              <div key={title + i} className='menu--item'>\r\n                <div className='menu--item--text'>\r\n                  <h3 className='title'>{title}</h3>\r\n                  <p className='para'>{text}</p>\r\n                  {subtitle && subtitle}\r\n                </div>\r\n                <p className='price'>${price}</p>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className='menu--img'>\r\n          <img\r\n            src='/fast-food-lunch-dinner-hamburger-2-transparent.png'\r\n            alt='nacho beer image'\r\n          />\r\n        </div>\r\n      </div>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default MenuContent;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACraA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}