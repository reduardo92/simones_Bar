{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.b8df5f66b7041e43a439.hot-update.js","sources":["webpack:///./components/context/StateProider.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport StateContext from './StateContext';\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [tab, setTab] = useState('drinks');\r\n  const [windowSize, setWindowSize] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [navScroll, setNavScroll] = useState(false);\r\n  const [navheight, setNavHeight] = useState(null);\r\n  const navRef = useRef();\r\n\r\n  const setCarosuel = (tablet = 3, laptop = 4, laptopLg = 5) => {\r\n    if (windowSize < 768) {\r\n      return 1;\r\n    } else if (windowSize <= 768 || windowSize < 1280) {\r\n      return tablet;\r\n    } else if (windowSize <= 1280 || windowSize < 2000) {\r\n      return laptop;\r\n    } else if (windowSize >= 2000) {\r\n      return laptopLg;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWindowSize(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNavHeight(navRef.current.scrollHeight);\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > navheight) {\r\n        setNavScroll(true);\r\n      } else {\r\n        setNavScroll(false);\r\n      }\r\n    });\r\n  }, [navheight]);\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        tab,\r\n        setTab,\r\n        windowSize,\r\n        setCarosuel,\r\n        toggle,\r\n        setToggle,\r\n        navScroll,\r\n        navRef\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StateProvider;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;;;;A","sourceRoot":""}