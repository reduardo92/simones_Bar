{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\simones_bar\\\\components\\\\menu\\\\menu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nvar menu = {\n  drinks: {\n    cocktails: [{\n      title: 'Mango Unchained',\n      text: \"Pinnacle mango vodka, mango\\n            nectar, lime, tripel sec and chamoy\",\n      price: '10.00'\n    }, {\n      title: 'Violet Delight',\n      text: \"Maker's Mark, TattersallSour Cherry Liquer, simple syrup and bitters\",\n      price: '10.00'\n    }, {\n      title: 'Winter Mule',\n      text: \"Ginger beer, Tito\\u2019s vodka,\\n            Tattersall cranberry liquer\",\n      price: '10.00'\n    }, {\n      title: 'Pilesen Negroni',\n      text: \"Espolon rep,  Tattersaill bitter orange, \\n            punt y mes\",\n      price: '10.00'\n    }, {\n      title: 'Juan Collins',\n      text: \"Espolon blanco tequilla fresh lemon juice, agave\",\n      price: '10.00'\n    }, {\n      title: 'The Detox',\n      text: \"New Holland gin, arugula syrup, fresh lemon juice\",\n      price: '10.00'\n    }, {\n      title: 'Punch Drunk',\n      text: \"Nordic rum, apple cider &\\n            cinnamon stick, served warm\",\n      price: '10.00'\n    }, {\n      title: 'Smoking Rose',\n      text: \"Banhez mezcal, rose simple, squirt, grapefruit juice, fresh lime\",\n      price: '10.00'\n    }],\n    wines: [{\n      title: 'WHITE',\n      text: \"Forchir Pinot  Grigio\\n  Blanc De Camarsac Sauv Blanc\",\n      price: '8.00'\n    }, {\n      title: 'RED',\n      text: \"Gougenheim Malbec Tarrica Pinot Noir\",\n      price: '8.00'\n    }, {\n      title: 'PINK',\n      text: \"Domain De Bachellery Rose\",\n      price: '8.00'\n    }, {\n      title: 'SPARKLING',\n      text: \"Gougenheim  Sparkling Rose\\n              J. Roget \",\n      price: '8.00'\n    }]\n  },\n  beer: {\n    drafts: [{\n      title: 'Virtue Southcider',\n      text: 'slightly sweet w/ subtle vanilla notes. 5/5%',\n      price: '6.00'\n    }, {\n      title: '21st Amendment El Sully',\n      text: 'mexican-styleger, light & crisp. 4.8%',\n      price: '5.00'\n    }, {\n      title: 'Allagash White',\n      text: 'belgian style wheat w/ corriander & orange 5.2%',\n      price: '6.00'\n    }, {\n      title: 'Lo Re Daemon',\n      text: 'Belgian golden ale w/ strong personality. 9%',\n      price: '7.00'\n    }, {\n      title: 'Lagunitas Little Sumpin Sumpin',\n      text: 'Wheaty with big citrus hops. 7.5%',\n      price: '6.00'\n    }, {\n      title: '18th St. Rise of Angels',\n      text: 'Double imperial IPA. 7.7%',\n      price: '7.00'\n    }, {\n      title: 'Miskatonic Westcoast Wizard',\n      text: 'Classic westcoast IPA, 9oz. 6.3%',\n      price: '6.00'\n    }, {\n      title: \"Founder's Dirty Bastard\",\n      text: 'Malty & rich scoth ale. 8.5%',\n      price: '6.00'\n    }, {\n      title: 'Stone Xocoveza',\n      text: 'Stout inspired by mexican hot chocolate, 9oz. 8.1%',\n      price: '8.00'\n    }, {\n      title: 'MapleWood Brownie Points',\n      text: 'Brown ale w/ chocolate & roffe flavors. 6.3%',\n      price: '6.00'\n    }],\n    packaged: [{\n      title: 'Press Blackerry & Hibiscous',\n      text: 'naturally flavored hard seltzer. 4%',\n      price: '5.00'\n    }, {\n      title: \"(Sp)Ace Blood Orange Cider\",\n      text: \"Slight sweet, unfiltered cider. 6.9%\",\n      price: '6.00'\n    }, {\n      title: \"Anderson Valley Cherry Gose\",\n      text: \"Sour brewed w/ cherry juice. 4.2%\",\n      price: '6.00'\n    }, {\n      title: \"Nothcoast Scrimshaw Pills\",\n      text: \"German style pilsner. 4.5%\",\n      price: '6.00'\n    }, {\n      title: \"Greenbush Oro de Tontos\",\n      text: \"Crisp & traditional lager. 4.7%\",\n      price: '5.00'\n    }, {\n      title: \"Off Color Very Very Far\",\n      text: \"Belgian style blonde ale. 6%\",\n      price: '8.00'\n    }, {\n      title: \"Boulevard Unfiltered Wheat\",\n      text: \"Easy drinking wheat ale. 4.4%\",\n      price: '6.00'\n    }, {\n      title: \"Forbidden Root Strawberry Basil\",\n      text: \"Hefeweizen brewed w/ strawberry & basil. 5%\",\n      price: '8.00'\n    }, {\n      title: \"Sweet Water Mango Kush\",\n      text: \"American wheat w/ herbal mango notes. 5%\",\n      price: '6.00'\n    }, {\n      title: \"Whiner Bleu Tub\",\n      text: \"American wild ale w/ blueberry. 5.6%\",\n      price: '7.00'\n    }, {\n      title: \"Oskar Blues Can-O-Bliss\",\n      text: \"Tropical fruit packed IPA. 7.2%\",\n      price: '6.00'\n    }, {\n      title: \"Avery Ellie's Brown\",\n      text: \"Well balanced brown ale w/ vanilla notes\",\n      price: '6.00'\n    }, {\n      title: \"War Pigs Lazurite\",\n      text: \"Bright & juicy American IPA. 7.5%\",\n      price: '7.00'\n    }, {\n      title: \"Maui Coconut Porter\",\n      text: \"A robust dark ale w/ coconut & mocha. 6%\",\n      price: '8.00'\n    }, {\n      title: \"(Alter)ior Motive IPA\",\n      text: \"Cirtus hopped midwest style IPA. 7%\",\n      price: '6.00'\n    }, {\n      title: 'New Holland Dragons Milk',\n      text: 'Barrel aged Imperial Stout w/ roasty malts. 11%',\n      price: '6.00'\n    }]\n  },\n  appetizers: [{\n    title: \"Fried Ravioli\",\n    text: \"stuffed with mozzarella, ricotta, and jalapenos\",\n    price: '8.00'\n  }, {\n    title: \"Chips and Guacamole\",\n    text: \"Simply delicious, always a classic go to\",\n    price: '6.00'\n  }, {\n    title: \"Mixed Fries\",\n    text: \"with chipotle ketchup & maple aioli\",\n    price: '5.50'\n  }, {\n    title: \"Fried Pickles\",\n    text: \"tempura battered pickle spears with chipotle ranch\",\n    price: '7.00'\n  }, {\n    title: \"Empanadas\",\n    text: \"choose any three: black bean and banana with cranberry aioli, spinach artichoke with salsa, chipotle chicken with avocado sour cream.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"choose any three: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"$6\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"choose any six: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"$10\"))),\n    price: '6.00'\n  }, {\n    title: \"Hummus\",\n    text: \"with pita and veggies\",\n    price: '7.00'\n  }, {\n    title: \"Fried Mozzarella Squares\",\n    text: \"with marinara and ranch dressing\",\n    price: '8.00'\n  }, {\n    title: \"Tempura Veggies\",\n    text: \"with wasabi aioli and soy sauce\",\n    price: '8.00'\n  }, {\n    title: \"Buffalo Wings\",\n    text: \"6 wings with celery and ranch dressing\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"12 wings: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"$11\"))),\n    price: '8.00'\n  }, {\n    title: \"Chicken Quesadilla\",\n    text: \"black beans, chipotle cream sauce, cheddar and chihuahua cheeses with sour cream, guacamole & salsa\",\n    price: '9.50'\n  }, {\n    title: \"Onion Rings\",\n    text: \"with ranch dressing & chipotle ketchup\",\n    price: '6.00'\n  }, {\n    title: \"Vegetable Quesadilla\",\n    text: \"bell peppers, mushrooms, onions, black beans, cheddar & chihuahua cheeses with sour cream, guacamole & salsa\",\n    price: '8.00'\n  }, {\n    title: \"Nachos\",\n    text: \"cheddar & chihuahua cheeses, black beans, pico de gallo, sour cream with salsa.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"With Chicken Or Beef \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"$9\")), ' ', __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"With Steak: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"$10\"))),\n    price: '8.00'\n  }, {\n    title: \"Portobello Fries\",\n    text: \"with wasabi aioli & soy sauce\",\n    price: '8.00'\n  }, {\n    title: \"Sweet Potato Fries\",\n    text: \"with lemon and maple aiolis\",\n    price: '6.50'\n  }, {\n    title: \"French Fries\",\n    text: \"with ranch dressing and chipotle ketchup\",\n    price: '4.00'\n  }],\n  soupSalad: [{\n    title: \"Caesar Salad\",\n    text: \"Romaine, croutons, parmesan cheese, red onions.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Add Chicken for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"$2\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Steak, Salmon or tuna for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"$3\"))),\n    price: '8.00'\n  }, {\n    title: \"Kale Salad\",\n    text: \"avocado, mandarins, roasted red pepper, citrus vinaigrette.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Add Chicken for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"$2\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Steak, Salmon or tuna for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"$3\"))),\n    price: '8.00'\n  }, {\n    title: \"Chopped Salad\",\n    text: \"romaine, queso fresco, tomato, avocado, carrots and pico de gallo with buttermilk ranch.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Add Chicken for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"$2\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Steak, Salmon or tuna for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"$3\"))),\n    price: '8.00'\n  }, {\n    title: \"Smoked Salmon Salad\",\n    text: \"spinach, roasted almonds, mandarins, shredded smoked salmon and cucumber with citrus vinaigrette\",\n    price: '11.00'\n  }, {\n    title: \"Home-made Tomato Bisque\",\n    text: \"served with a homemade cracker\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Cup: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"$3\")), ' ', __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Bowl: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"$5\"))),\n    price: '3.00'\n  }, {\n    title: \"Simone's Soup Of The Day\",\n    text: \"made fresh and ever-changing\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Cup: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"$3\")), ' ', __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Bowl: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"$5\"))),\n    price: '3.00'\n  }, {\n    title: \"Side Salad\",\n    text: \"spinach, tomato, cucumber and carrots with house vinaigrette.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Add Chicken for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"$2\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Steak, Salmon or tuna for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"$3\"))),\n    price: '4.00'\n  }, {\n    title: \"Caprese Salad\",\n    text: \"fresh mozzarella, fresh basil, tomato and balsamic reduction.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"Add Chicken for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"$2\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Steak, Salmon or tuna for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"$3\"))),\n    price: '7.50'\n  }, {\n    title: \"Simone\\u2019s Salad\",\n    text: \"spinach, cranberries, almonds, goat cheese and pickled red onions with balsamic vinaigrette.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Add Chicken for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"$2\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Steak, Salmon or tuna for \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"$3\"))),\n    price: '8.50'\n  }, {\n    title: \"Black & Blue Salad\",\n    text: \"grilled NY strip layered w/ tomatoes, onions, bleu cheese, spinach and fresh basil with balsamic vinaigrette\",\n    price: '11.00'\n  }],\n  pizzas: [{\n    title: \"Margherita Pizza\",\n    text: \"Fresh Mozzarella, basil, balsamic dressing on an olive oil crust\",\n    price: '9.00'\n  }, {\n    title: \"Chicken Pesto Pizza\",\n    text: \"mozzarella, chicken, pesto, roasted red peppers.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '9.00'\n  }, {\n    title: \"Pilsen Pizza\",\n    text: \"black bean sauce, beef, pico de gallo, chihuahua & queso fresco.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '9.00'\n  }, {\n    title: \"Tuscan Pizza\",\n    text: \"roasted red peppers, portobella mushrooms and mozzarella.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '8.00'\n  }, {\n    title: \"Traditional Pizza\",\n    text: \"italian sausage, green peppers, mushrooms and mozzarella.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '9.00'\n  }, {\n    title: \"BBQ Chicken Pizza\",\n    text: \"chicken, bbq sauce, cheddar and jack cheeses.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '9.00'\n  }, {\n    title: \"Quinoa Pizza\",\n    text: \"toasted quinoa, caramelized red onions, avocado and mozzarella.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '8.00'\n  }, {\n    title: \"Simone\\u2019s Pizza\",\n    text: \"alfredo sauce, potatoes, parmesan and rosemary syrup.\",\n    subtitle: __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, \"Each additional veggie: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, \"$.50\")), __jsx(\"p\", {\n      className: \"para new-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, \"Each additional meat: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"$1.00\"))),\n    price: '8.00'\n  }],\n  sandwiches: [{\n    title: \"Meatball Sub\",\n    text: \"Ground angus beef, mozzarella,  marinara on a hoagie roll\",\n    price: '10.50'\n  }, {\n    title: \"Simone\\u2019s Veggie Burger\",\n    text: \"Sweet corn, sweet potato, carrots, shallots, celery, cumin, Sriracha sauce, shoe string potatoes\",\n    price: '9.00'\n  }, {\n    title: \"Steak Sandwich\",\n    text: \"grilled NY strip with bleu cheese, caramelized onions, lettuce and tomato on a hoagie roll\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '11.00'\n  }, {\n    title: \"Grilled Salmon\",\n    text: \"topped with a salsa mayo, spinach and tomato.\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '11.00'\n  }, {\n    title: \"Turkey Burger\",\n    text: \"Hand pressed ground turkey. Topped with swiss cheese and salsa mayo.\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.50'\n  }, {\n    title: \"Buffalo Chicken\",\n    text: \"pulled chicken with buffalo sauce and celery relish\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.00'\n  }, {\n    title: \"Blackened Tuna Steak\",\n    text: 'seared medium rare w/salsa mayo & tomato',\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '11.00'\n  }, {\n    title: \"Grilled Cheese\",\n    text: \"cheddar and chihuahua cheeses with a tomato slice and cup of tomato bisque\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.00'\n  }, {\n    title: \"BLT\",\n    text: \"bacon, lettuce and tomato on multi-grain with avocado\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '8.50'\n  }, {\n    title: \"Grilled Portobello\",\n    text: \"on multi-grain with pesto and cheddar cheese\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '8.50'\n  }, {\n    title: \"Caesar Salad Wrap\",\n    text: \"with a cup of Tomato Bisque. add grilled chicken breast: \".concat(__jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }, \"$2\")),\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '8.00'\n  }, {\n    title: \"Mexican Grilled Chicken Sandwich\",\n    text: \"with salsa mayo and pico de gallo\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.50'\n  }, {\n    title: \"Custom Burger\",\n    text: __jsx(React.Fragment, null, \"add american, cheddar, swiss, bleu, ghost pepper jack, chihuahua cheese, grilled onions, jalapenos, mushrooms or pico de gallo for\", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, \" $.50\"), \" add bacon, avocado, guacamole, portobella or goat cheese\", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, \" $1.00\")),\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.00'\n  }, {\n    title: \"Vegan Burger\",\n    text: \"quinoa, black beans and rice topped with pico de gallo\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.00'\n  }, {\n    title: \"Pilsen Burger\",\n    text: \"jalapenos, guacamole and chihuahua cheese\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '10.00'\n  }, {\n    title: \"Chipotle Burger\",\n    text: \"chipotle BBQ sauce, cheddar, bacon and onion ring\",\n    subtitle: __jsx(\"p\", {\n      className: \"para sandwiche--subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }, \"comes with a mix of hand cut french and sweet potato fries. substitute veggie of the day for no charge. substitute all sweet potato fries or a mixed green salad: \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }, \"$1.00\")),\n    price: '9.00'\n  }],\n  desserts: [{\n    title: \"Kristoffer's Tres Leches Cake\",\n    text: \"the classic dulce de leche. made fresh by the best\",\n    price: '6.00'\n  }, {\n    title: \"Ice Cream Sundae\",\n    text: \"bobtail's hand-made vanilla ice cream and our house-made chocolate sauce highlight this classic.\",\n    price: '6.00'\n  }, {\n    title: \"Dessert Of The Day\",\n    text: \"chef rafa creates extraordinarily delicious daily delights. indulge!\",\n    price: '5.00'\n  }],\n  brunch: [{\n    title: \"Tea\",\n    text: \"\",\n    price: '2.00'\n  }, {\n    title: \"Bridgeport Coffee\",\n    text: \"\",\n    price: '2.00'\n  }, {\n    title: \"Mimosa with fresh OJ\",\n    text: \"\",\n    price: '7.50'\n  }, {\n    title: \"Simone\\u2019s Bloody Mary\",\n    text: \"\",\n    price: '7.50'\n  }, {\n    title: \"Sides\",\n    text: \"hashbrowns, sausage, bacon or 2 eggs\",\n    price: '3.00'\n  }, {\n    title: \"Breakfast Burger\",\n    text: \"topped with a fried egg, bacon, and cheddar cheese served with hashbrowns\",\n    price: '10.00'\n  }, {\n    title: \"Breakfast Croisant\",\n    text: \"scrambled eggs, cheddar and bacon served with hashbrowns\",\n    price: '9.00'\n  }, {\n    title: \"Pancakes\",\n    text: \"your choice of blueberry, chocolate chip or plain, all served with syrup\",\n    price: '7.00'\n  }, {\n    title: \"Breakfast Burrito\",\n    text: \"eggs, bell peppers, mushrooms, onions, black beans and cheddar cheese served with hash browns\",\n    price: '9.00'\n  }, {\n    title: \"Simone\\u2019s Omelette\",\n    text: \"carmelized red onions, mozzarella and bacon, topped with avocado served with hash browns\",\n    price: '9.00'\n  }, {\n    title: \"Chilaquiles Suizo\",\n    text: \"with tomatillo green sauce\",\n    price: '7.00'\n  }, {\n    title: \"Waffle\",\n    text: \"with fresh berries and a scoop of ice cream\",\n    price: '7.00'\n  }, {\n    title: \"French Toast\",\n    text: \"red hen sweet bread, creme anglaise\",\n    price: '8.00'\n  }]\n};\nexport default menu;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/simones_bar/components/menu/menu.js"],"names":["menu","drinks","cocktails","title","text","price","wines","beer","drafts","packaged","appetizers","subtitle","soupSalad","pizzas","sandwiches","desserts","brunch"],"mappings":"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","sourcesContent":["const menu = {\r\n  drinks: {\r\n    cocktails: [\r\n      {\r\n        title: 'Mango Unchained',\r\n        text: `Pinnacle mango vodka, mango\r\n            nectar, lime, tripel sec and chamoy`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'Violet Delight',\r\n        text: `Maker's Mark, TattersallSour Cherry Liquer, simple syrup and bitters`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'Winter Mule',\r\n        text: `Ginger beer, Tito’s vodka,\r\n            Tattersall cranberry liquer`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'Pilesen Negroni',\r\n        text: `Espolon rep,  Tattersaill bitter orange, \r\n            punt y mes`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'Juan Collins',\r\n        text: `Espolon blanco tequilla fresh lemon juice, agave`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'The Detox',\r\n        text: `New Holland gin, arugula syrup, fresh lemon juice`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'Punch Drunk',\r\n        text: `Nordic rum, apple cider &\r\n            cinnamon stick, served warm`,\r\n        price: '10.00'\r\n      },\r\n      {\r\n        title: 'Smoking Rose',\r\n        text: `Banhez mezcal, rose simple, squirt, grapefruit juice, fresh lime`,\r\n        price: '10.00'\r\n      }\r\n    ],\r\n    wines: [\r\n      {\r\n        title: 'WHITE',\r\n        text: `Forchir Pinot  Grigio\r\n  Blanc De Camarsac Sauv Blanc`,\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: 'RED',\r\n        text: `Gougenheim Malbec Tarrica Pinot Noir`,\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: 'PINK',\r\n        text: `Domain De Bachellery Rose`,\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: 'SPARKLING',\r\n        text: `Gougenheim  Sparkling Rose\r\n              J. Roget `,\r\n        price: '8.00'\r\n      }\r\n    ]\r\n  },\r\n  beer: {\r\n    drafts: [\r\n      {\r\n        title: 'Virtue Southcider',\r\n        text: 'slightly sweet w/ subtle vanilla notes. 5/5%',\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: '21st Amendment El Sully',\r\n        text: 'mexican-styleger, light & crisp. 4.8%',\r\n        price: '5.00'\r\n      },\r\n      {\r\n        title: 'Allagash White',\r\n        text: 'belgian style wheat w/ corriander & orange 5.2%',\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: 'Lo Re Daemon',\r\n        text: 'Belgian golden ale w/ strong personality. 9%',\r\n        price: '7.00'\r\n      },\r\n      {\r\n        title: 'Lagunitas Little Sumpin Sumpin',\r\n        text: 'Wheaty with big citrus hops. 7.5%',\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: '18th St. Rise of Angels',\r\n        text: 'Double imperial IPA. 7.7%',\r\n        price: '7.00'\r\n      },\r\n      {\r\n        title: 'Miskatonic Westcoast Wizard',\r\n        text: 'Classic westcoast IPA, 9oz. 6.3%',\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Founder's Dirty Bastard`,\r\n        text: 'Malty & rich scoth ale. 8.5%',\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: 'Stone Xocoveza',\r\n        text: 'Stout inspired by mexican hot chocolate, 9oz. 8.1%',\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: 'MapleWood Brownie Points',\r\n        text: 'Brown ale w/ chocolate & roffe flavors. 6.3%',\r\n        price: '6.00'\r\n      }\r\n    ],\r\n    packaged: [\r\n      {\r\n        title: 'Press Blackerry & Hibiscous',\r\n        text: 'naturally flavored hard seltzer. 4%',\r\n        price: '5.00'\r\n      },\r\n      {\r\n        title: `(Sp)Ace Blood Orange Cider`,\r\n        text: `Slight sweet, unfiltered cider. 6.9%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Anderson Valley Cherry Gose`,\r\n        text: `Sour brewed w/ cherry juice. 4.2%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Nothcoast Scrimshaw Pills`,\r\n        text: `German style pilsner. 4.5%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Greenbush Oro de Tontos`,\r\n        text: `Crisp & traditional lager. 4.7%`,\r\n        price: '5.00'\r\n      },\r\n      {\r\n        title: `Off Color Very Very Far`,\r\n        text: `Belgian style blonde ale. 6%`,\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: `Boulevard Unfiltered Wheat`,\r\n        text: `Easy drinking wheat ale. 4.4%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Forbidden Root Strawberry Basil`,\r\n        text: `Hefeweizen brewed w/ strawberry & basil. 5%`,\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: `Sweet Water Mango Kush`,\r\n        text: `American wheat w/ herbal mango notes. 5%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Whiner Bleu Tub`,\r\n        text: `American wild ale w/ blueberry. 5.6%`,\r\n        price: '7.00'\r\n      },\r\n      {\r\n        title: `Oskar Blues Can-O-Bliss`,\r\n        text: `Tropical fruit packed IPA. 7.2%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `Avery Ellie's Brown`,\r\n        text: `Well balanced brown ale w/ vanilla notes`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: `War Pigs Lazurite`,\r\n        text: `Bright & juicy American IPA. 7.5%`,\r\n        price: '7.00'\r\n      },\r\n      {\r\n        title: `Maui Coconut Porter`,\r\n        text: `A robust dark ale w/ coconut & mocha. 6%`,\r\n        price: '8.00'\r\n      },\r\n      {\r\n        title: `(Alter)ior Motive IPA`,\r\n        text: `Cirtus hopped midwest style IPA. 7%`,\r\n        price: '6.00'\r\n      },\r\n      {\r\n        title: 'New Holland Dragons Milk',\r\n        text: 'Barrel aged Imperial Stout w/ roasty malts. 11%',\r\n        price: '6.00'\r\n      }\r\n    ]\r\n  },\r\n  appetizers: [\r\n    {\r\n      title: `Fried Ravioli`,\r\n      text: `stuffed with mozzarella, ricotta, and jalapenos`,\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Chips and Guacamole`,\r\n      text: `Simply delicious, always a classic go to`,\r\n      price: '6.00'\r\n    },\r\n    {\r\n      title: `Mixed Fries`,\r\n      text: `with chipotle ketchup & maple aioli`,\r\n      price: '5.50'\r\n    },\r\n    {\r\n      title: `Fried Pickles`,\r\n      text: `tempura battered pickle spears with chipotle ranch`,\r\n      price: '7.00'\r\n    },\r\n    {\r\n      title: `Empanadas`,\r\n      text: `choose any three: black bean and banana with cranberry aioli, spinach artichoke with salsa, chipotle chicken with avocado sour cream.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            choose any three: <strong>$6</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            choose any six: <strong>$10</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '6.00'\r\n    },\r\n    { title: `Hummus`, text: `with pita and veggies`, price: '7.00' },\r\n    {\r\n      title: `Fried Mozzarella Squares`,\r\n      text: `with marinara and ranch dressing`,\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Tempura Veggies`,\r\n      text: `with wasabi aioli and soy sauce`,\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Buffalo Wings`,\r\n      text: `6 wings with celery and ranch dressing`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            12 wings: <strong>$11</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Chicken Quesadilla`,\r\n      text: `black beans, chipotle cream sauce, cheddar and chihuahua cheeses with sour cream, guacamole & salsa`,\r\n      price: '9.50'\r\n    },\r\n    {\r\n      title: `Onion Rings`,\r\n      text: `with ranch dressing & chipotle ketchup`,\r\n      price: '6.00'\r\n    },\r\n    {\r\n      title: `Vegetable Quesadilla`,\r\n      text: `bell peppers, mushrooms, onions, black beans, cheddar & chihuahua cheeses with sour cream, guacamole & salsa`,\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Nachos`,\r\n      text: `cheddar & chihuahua cheeses, black beans, pico de gallo, sour cream with salsa.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            With Chicken Or Beef <strong>$9</strong>\r\n          </p>{' '}\r\n          <p className='para new-line'>\r\n            With Steak: <strong>$10</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Portobello Fries`,\r\n      text: `with wasabi aioli & soy sauce`,\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Sweet Potato Fries`,\r\n      text: `with lemon and maple aiolis`,\r\n      price: '6.50'\r\n    },\r\n    {\r\n      title: `French Fries`,\r\n      text: `with ranch dressing and chipotle ketchup`,\r\n      price: '4.00'\r\n    }\r\n  ],\r\n  soupSalad: [\r\n    {\r\n      title: `Caesar Salad`,\r\n      text: `Romaine, croutons, parmesan cheese, red onions.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Add Chicken for <strong>$2</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Steak, Salmon or tuna for <strong>$3</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Kale Salad`,\r\n      text: `avocado, mandarins, roasted red pepper, citrus vinaigrette.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Add Chicken for <strong>$2</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Steak, Salmon or tuna for <strong>$3</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Chopped Salad`,\r\n      text: `romaine, queso fresco, tomato, avocado, carrots and pico de gallo with buttermilk ranch.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Add Chicken for <strong>$2</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Steak, Salmon or tuna for <strong>$3</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Smoked Salmon Salad`,\r\n      text: `spinach, roasted almonds, mandarins, shredded smoked salmon and cucumber with citrus vinaigrette`,\r\n      price: '11.00'\r\n    },\r\n    {\r\n      title: `Home-made Tomato Bisque`,\r\n      text: `served with a homemade cracker`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Cup: <strong>$3</strong>\r\n          </p>{' '}\r\n          <p className='para new-line'>\r\n            Bowl: <strong>$5</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '3.00'\r\n    },\r\n    {\r\n      title: `Simone's Soup Of The Day`,\r\n      text: `made fresh and ever-changing`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Cup: <strong>$3</strong>\r\n          </p>{' '}\r\n          <p className='para new-line'>\r\n            Bowl: <strong>$5</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '3.00'\r\n    },\r\n    {\r\n      title: `Side Salad`,\r\n      text: `spinach, tomato, cucumber and carrots with house vinaigrette.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Add Chicken for <strong>$2</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Steak, Salmon or tuna for <strong>$3</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '4.00'\r\n    },\r\n    {\r\n      title: `Caprese Salad`,\r\n      text: `fresh mozzarella, fresh basil, tomato and balsamic reduction.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Add Chicken for <strong>$2</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Steak, Salmon or tuna for <strong>$3</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '7.50'\r\n    },\r\n    {\r\n      title: `Simone’s Salad`,\r\n      text: `spinach, cranberries, almonds, goat cheese and pickled red onions with balsamic vinaigrette.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Add Chicken for <strong>$2</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Steak, Salmon or tuna for <strong>$3</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.50'\r\n    },\r\n    {\r\n      title: `Black & Blue Salad`,\r\n      text: `grilled NY strip layered w/ tomatoes, onions, bleu cheese, spinach and fresh basil with balsamic vinaigrette`,\r\n      price: '11.00'\r\n    }\r\n  ],\r\n  pizzas: [\r\n    {\r\n      title: `Margherita Pizza`,\r\n      text: `Fresh Mozzarella, basil, balsamic dressing on an olive oil crust`,\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Chicken Pesto Pizza`,\r\n      text: `mozzarella, chicken, pesto, roasted red peppers.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Pilsen Pizza`,\r\n      text: `black bean sauce, beef, pico de gallo, chihuahua & queso fresco.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Tuscan Pizza`,\r\n      text: `roasted red peppers, portobella mushrooms and mozzarella.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Traditional Pizza`,\r\n      text: `italian sausage, green peppers, mushrooms and mozzarella.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `BBQ Chicken Pizza`,\r\n      text: `chicken, bbq sauce, cheddar and jack cheeses.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Quinoa Pizza`,\r\n      text: `toasted quinoa, caramelized red onions, avocado and mozzarella.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Simone’s Pizza`,\r\n      text: `alfredo sauce, potatoes, parmesan and rosemary syrup.`,\r\n      subtitle: (\r\n        <>\r\n          <p className='para new-line'>\r\n            Each additional veggie: <strong>$.50</strong>\r\n          </p>\r\n          <p className='para new-line'>\r\n            Each additional meat: <strong>$1.00</strong>\r\n          </p>\r\n        </>\r\n      ),\r\n      price: '8.00'\r\n    }\r\n  ],\r\n  sandwiches: [\r\n    {\r\n      title: `Meatball Sub`,\r\n      text: `Ground angus beef, mozzarella,  marinara on a hoagie roll`,\r\n      price: '10.50'\r\n    },\r\n    {\r\n      title: `Simone’s Veggie Burger`,\r\n      text: `Sweet corn, sweet potato, carrots, shallots, celery, cumin, Sriracha sauce, shoe string potatoes`,\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Steak Sandwich`,\r\n      text: `grilled NY strip with bleu cheese, caramelized onions, lettuce and tomato on a hoagie roll`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '11.00'\r\n    },\r\n    {\r\n      title: `Grilled Salmon`,\r\n      text: `topped with a salsa mayo, spinach and tomato.`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '11.00'\r\n    },\r\n    {\r\n      title: `Turkey Burger`,\r\n      text: `Hand pressed ground turkey. Topped with swiss cheese and salsa mayo.`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.50'\r\n    },\r\n    {\r\n      title: `Buffalo Chicken`,\r\n      text: `pulled chicken with buffalo sauce and celery relish`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Blackened Tuna Steak`,\r\n      text: 'seared medium rare w/salsa mayo & tomato',\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '11.00'\r\n    },\r\n    {\r\n      title: `Grilled Cheese`,\r\n      text: `cheddar and chihuahua cheeses with a tomato slice and cup of tomato bisque`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `BLT`,\r\n      text: `bacon, lettuce and tomato on multi-grain with avocado`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '8.50'\r\n    },\r\n    {\r\n      title: `Grilled Portobello`,\r\n      text: `on multi-grain with pesto and cheddar cheese`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '8.50'\r\n    },\r\n    {\r\n      title: `Caesar Salad Wrap`,\r\n      text: `with a cup of Tomato Bisque. add grilled chicken breast: ${(\r\n        <strong>$2</strong>\r\n      )}`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '8.00'\r\n    },\r\n    {\r\n      title: `Mexican Grilled Chicken Sandwich`,\r\n      text: `with salsa mayo and pico de gallo`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.50'\r\n    },\r\n    {\r\n      title: `Custom Burger`,\r\n      text: (\r\n        <>\r\n          add american, cheddar, swiss, bleu, ghost pepper jack, chihuahua\r\n          cheese, grilled onions, jalapenos, mushrooms or pico de gallo for\r\n          <strong> $.50</strong> add bacon, avocado, guacamole, portobella or\r\n          goat cheese\r\n          <strong> $1.00</strong>\r\n        </>\r\n      ),\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Vegan Burger`,\r\n      text: `quinoa, black beans and rice topped with pico de gallo`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Pilsen Burger`,\r\n      text: `jalapenos, guacamole and chihuahua cheese`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '10.00'\r\n    },\r\n    {\r\n      title: `Chipotle Burger`,\r\n      text: `chipotle BBQ sauce, cheddar, bacon and onion ring`,\r\n      subtitle: (\r\n        <p className='para sandwiche--subtitle'>\r\n          comes with a mix of hand cut french and sweet potato fries. substitute\r\n          veggie of the day for no charge. substitute all sweet potato fries or\r\n          a mixed green salad: <strong>$1.00</strong>\r\n        </p>\r\n      ),\r\n      price: '9.00'\r\n    }\r\n  ],\r\n  desserts: [\r\n    {\r\n      title: `Kristoffer's Tres Leches Cake`,\r\n      text: `the classic dulce de leche. made fresh by the best`,\r\n      price: '6.00'\r\n    },\r\n    {\r\n      title: `Ice Cream Sundae`,\r\n      text: `bobtail's hand-made vanilla ice cream and our house-made chocolate sauce highlight this classic.`,\r\n      price: '6.00'\r\n    },\r\n    {\r\n      title: `Dessert Of The Day`,\r\n      text: `chef rafa creates extraordinarily delicious daily delights. indulge!`,\r\n      price: '5.00'\r\n    }\r\n  ],\r\n  brunch: [\r\n    { title: `Tea`, text: ``, price: '2.00' },\r\n    { title: `Bridgeport Coffee`, text: ``, price: '2.00' },\r\n    { title: `Mimosa with fresh OJ`, text: ``, price: '7.50' },\r\n    { title: `Simone’s Bloody Mary`, text: ``, price: '7.50' },\r\n    {\r\n      title: `Sides`,\r\n      text: `hashbrowns, sausage, bacon or 2 eggs`,\r\n      price: '3.00'\r\n    },\r\n    {\r\n      title: `Breakfast Burger`,\r\n      text: `topped with a fried egg, bacon, and cheddar cheese served with hashbrowns`,\r\n      price: '10.00'\r\n    },\r\n    {\r\n      title: `Breakfast Croisant`,\r\n      text: `scrambled eggs, cheddar and bacon served with hashbrowns`,\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Pancakes`,\r\n      text: `your choice of blueberry, chocolate chip or plain, all served with syrup`,\r\n      price: '7.00'\r\n    },\r\n    {\r\n      title: `Breakfast Burrito`,\r\n      text: `eggs, bell peppers, mushrooms, onions, black beans and cheddar cheese served with hash browns`,\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Simone’s Omelette`,\r\n      text: `carmelized red onions, mozzarella and bacon, topped with avocado served with hash browns`,\r\n      price: '9.00'\r\n    },\r\n    {\r\n      title: `Chilaquiles Suizo`,\r\n      text: `with tomatillo green sauce`,\r\n      price: '7.00'\r\n    },\r\n    {\r\n      title: `Waffle`,\r\n      text: `with fresh berries and a scoop of ice cream`,\r\n      price: '7.00'\r\n    },\r\n    {\r\n      title: `French Toast`,\r\n      text: `red hen sweet bread, creme anglaise`,\r\n      price: '8.00'\r\n    }\r\n  ]\r\n};\r\n\r\nexport default menu;\r\n"]},"metadata":{},"sourceType":"module"}